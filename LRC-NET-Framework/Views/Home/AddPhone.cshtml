@model LRC_NET_Framework.Models.PhoneNumbersModels

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model._MemberID)
        <div class="col-md-11 col-md-offset-1"><h4>Add Phone</h4></div>
        <hr />
        <fieldset>

            <div class="form-group">
                <div class="col-md-11 col-md-offset-1" id="PhoneNumber">
                    @Html.Label("PhoneNumber", "Phone Number", htmlAttributes: new { @class = "control-label" })<span class="text-danger">&nbsp;&nbsp;*</span>
                    @Html.EditorFor(model => model._PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-11 col-md-offset-1" id="IsPrimary">
                    @Html.Label("IsPrimary", "Is Primary", htmlAttributes: new { @class = "control-label" })<span class="text-danger">&nbsp;&nbsp;*</span>
                    <div class="checkbox">
                        @Html.EditorFor(model => model._IsPrimary)
                        @Html.ValidationMessageFor(model => model._IsPrimary, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-11 col-md-offset-1" id="PhoneTypeID">
                    @Html.Label("PhoneTypeID", "Phone Type", htmlAttributes: new { @class = "control-label" })<span class="text-danger">&nbsp;&nbsp;*</span>
                    @Html.DropDownListFor(model => model._PhoneTypeID, Model._PhoneTypes, new { @class = "form-control", style = "width: 250px;" })
                    @*@Html.DropDownList("PhoneTypeID", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model._PhoneTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-1 col-md-11">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </fieldset>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
