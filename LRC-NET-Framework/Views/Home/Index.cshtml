@model PagedList.IPagedList<LRC_NET_Framework.tb_MemberMaster>
@using PagedList.Mvc

@{
    ViewBag.Title = "Local List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-md-12" style="margin-top:5px;">
    <ul class="list-inline">
        <li role="button" style="padding-bottom:10px;">
            <div class="btn-group">
                <button type="button" class="btn btn-sm btn-info dropdown-toggle" data-toggle="dropdown">
                    School&nbsp;&nbsp;&nbsp;<span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    @foreach (var c in ViewBag.Colleges)
                    {
                        <li role="button"><a style="text-align:left" href="@Url.Action("MembersBySchool", "Home", new { sortOrder = " ", searchString = " ", page = 1, CollegeID = @c.Value, DepartmentID = 0, })" class="btn btn-link">@c.Text</a></li>
                    }
                </ul>
            </div>
        </li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("CreateNewMember", "Home")" class="btn btn-sm btn-info">Member&nbsp;<span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("Index", "Activities")" class="btn btn-sm btn-info">Activities&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("Index", "Assessment")" class="btn btn-sm btn-info">Assessments&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="#" class="btn btn-sm btn-info">Attributes&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("Index", "Notes")" class="btn btn-sm btn-info">Notes&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("Index", "Roles")" class="btn btn-sm btn-info">Roles&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("Index", "Building")" class="btn btn-sm btn-info">Bldgs & Depts&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="@Url.Action("MembershipFormsList", "Home")" class="btn btn-sm btn-info">Membership Forms&nbsp;<span class="glyphicon glyphicon-cog" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="#" class="btn btn-sm btn-info">COPE Forms&nbsp;<span class="glyphicon glyphicon-folder-open" aria-hidden="true"></span></a></li>
        <li role="button" style="padding-bottom:10px;"><a href="#" class="btn btn-sm btn-info">Local&nbsp;<span class="glyphicon glyphicon-stats" aria-hidden="true"></span></a></li>
    </ul>
</div>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="input-group">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                    @*@Html.TextBox("SearchString", Profile.GetPropertyValue("SearchString"), new { @class = "form-control", placeholder = "Search" })*@
                    @Html.TextBox("searchString", (string)ViewBag._searchString, new { @class = "form-control", placeholder = "Search" })
                </div>
            </div>

            <div class="col-md-10" id="ShowFilter">
                <ul class="list-inline">
                    <li>
                        @{ string showing = String.Empty; }
                        @{ int toOnPage = (Model.FirstItemOnPage + MvcApplication.PageSize_Home - 1); }
                        @if (toOnPage < (int)ViewData["MemberQty"])
                            { showing = "Showing " + Model.FirstItemOnPage + " - " + toOnPage  + " of " + ViewData["MemberQty"]; }
                        else
                            { showing = "Showing " + Model.FirstItemOnPage + " - " + ViewData["MemberQty"] + "  of " + ViewData["MemberQty"]; }
                        @showing
                    </li>
                    <li role="button">
                        <a href="@Url.Action("AddFilter", "Home", new { CollegeID = (int)ViewBag._CollegeID, DepartmentID = (int)ViewBag._DepartmentID, searchString = (string)ViewBag._searchString })" class="btn btn-toolbar viewFilter" , data-dialog-title="Add Filter">&nbsp;Add&nbsp;Filter<span class="glyphicon glyphicon-filter pull-left" aria-hidden="true"></span></a>
                    </li>
                    <li role="button">
                        <a href="@Url.Action("ExportData", "Home", new { CollegeID = (int)ViewBag._CollegeID, DepartmentID = (int)ViewBag._DepartmentID, searchString = (string)ViewBag.searchString })" class="btn btn-toolbar viewDialog" , data-dialog-title="Data Format">&nbsp;Export&nbsp;Data<span class="glyphicon glyphicon-export pull-left" aria-hidden="true"></span></a>
                    </li>
                </ul>
            </div>

            <div clas="col-md-10" id="HiddenFilterBlock" hidden="hidden" style="font-size:smaller">
                <ul class="list-inline">
                    <li>
                        @Html.DropDownList("Colleges", null, htmlAttributes: new { @class = "form-control", style = "width: 200px" })
                    </li>
                    <li>
                        @Html.DropDownList("Departments", null, htmlAttributes: new { @class = "form-control", style = "width: 200px" })
                    </li>
                    <li>
                        <div class="checkbox-inline">
                            @Html.CheckBox("IsActiveMembers", new { @style = "width:2vw; height:2vh;" })
                            <label class="form-check-label" style="padding:7px;">Active</label>
                        </div>
                    </li>
                    <li style="padding-left:50px;">
                        <button class="btn btn-group-justified" type="submit">
                            <span>&nbsp;&nbsp;Applay&nbsp;Filter<span class="glyphicon glyphicon-filter pull-left" aria-hidden="true"></span></span>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    }

    <div class="ex1">
        <table class="table table-bordered table-sm" style="font-size:smaller;">
            <tr>
                <th style="vertical-align:middle; background-color:gainsboro;">
                    @Html.ActionLink("Faculty Member", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Home&nbsp;School
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Class&nbsp;Category
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Department
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Role
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    COPE
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Dues
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Membership
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Member Form
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Membership Commitment
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Phone
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Address
                </th>
                <th style="vertical-align:middle; background-color:gainsboro; text-align:center">
                    Status
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.FirstName + " " + item.LastName, "Details", "Home", new { id = item.MemberID }, new { @class = "text -info" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_Department.tb_College.CollegeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_JobStatus.JobStatusName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_Department.DepartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_MemberRoles.Where(t => t.MemberID == item.MemberID).LastOrDefault().tb_Roles.RoleName)
                    </td>
                    <td align="center">
                        @if (item.tb_CopeForms != null && item.tb_CopeForms.Count > 0)
                        {
                            <a href="@Url.Action("GetPdfOrJpeg", new { fileName = item.tb_CopeForms.Where(s => s.MemberID == item.MemberID).LastOrDefault().FormImagePath, form = "CopeForms" })" class="btn btn-xs" target="_blank"><span class="glyphicon glyphicon-camera" aria-hidden="true"></span></a>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_Dues.DuesName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_MemberActivity.Where(t => t.MemberID == item.MemberID).LastOrDefault().tb_ActivityStatus.ActivityStatusName)
                    </td>
                    <td align="center">
                        @if (item.tb_MembershipForms != null && item.tb_MembershipForms.Count > 0)
                        {
                            <a href="@Url.Action("GetPdfOrJpeg", new { fileName = item.tb_MembershipForms.Where(s => s.MemberID == item.MemberID).LastOrDefault().FormImagePath, form = "MembershipForms" })" class="btn btn-xs" target="_blank"><span class="glyphicon glyphicon-camera" aria-hidden="true"></span></a>
                        }
                    </td>
                    <td align="center">
                        @Html.DisplayFor(modelItem => item.tb_Assessment.Where(t => t.MemberID == item.MemberID).LastOrDefault().ValueID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_MemberPhoneNumbers.Where(t => t.MemberID == item.MemberID).Where(p => p.IsPrimary == true).FirstOrDefault().PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_MemberAddress.Where(t => t.MemberID == item.MemberID && t.IsPrimary == true).LastOrDefault().HomeStreet1),
                        @Html.DisplayFor(modelItem => item.tb_MemberAddress.Where(t => t.MemberID == item.MemberID && t.IsPrimary == true).LastOrDefault().HomeStreet2)
                        @Html.DisplayFor(modelItem => item.tb_MemberAddress.Where(t => t.MemberID == item.MemberID && t.IsPrimary == true).LastOrDefault().City),
                        @Html.DisplayFor(modelItem => item.tb_MemberAddress.Where(t => t.MemberID == item.MemberID && t.IsPrimary == true).LastOrDefault().tb_States.StateCode),
                        @Html.DisplayFor(modelItem => item.tb_MemberAddress.Where(t => t.MemberID == item.MemberID && t.IsPrimary == true).LastOrDefault().ZipCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tb_Categories.CategoryName)
                    </td>
                    @*<td>
                            <div class="btn-group" role="group" aria-label="...">
                                @Html.ActionLink("Edit", "Edit", new { id = item.MemberID }, new { @class = "btn btn-primary" })
                                @Html.ActionLink("Details", "Details", new { id = item.MemberID }, new { @class = "btn btn-info" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.MemberID }, new { @class = "btn btn-danger" })
                            </div>
                        </td>*@
                </tr>
            }
        </table>
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>

    @section Scripts {
        <script src='@Url.Content("~/Scripts/jquery-1.12.4.min.js")' type="text/javascript"></script>
        <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>
        <link href="~/Content/themes/base/all.css" rel="stylesheet" />
        <script>
            $(document).ready(function () {

                $.ajaxSetup({ cache: false });

                $(".viewDialog").on("click", function (e) {
                    e.preventDefault();

                    $("<div></div>")
                        .addClass("dialog")
                        .appendTo("body")
                        .dialog({
                            closeText: "",
                            title: $(this).attr("data-dialog-title"),
                            close: function () { $(this).remove() },
                            height: 300,
                            width: 500,
                            modal: true
                        })
                        .load(this.href);
                });
            });
        </script>

        <script>
            $(document).ready(function () {
                $('[data-toggle="tooltip"]').tooltip();
            });
        </script>

        <script>
        $("#Colleges").change(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetDepartmentsByCollegeId")',
                datatype: JSON,
                data: {
                    'CollegeId': $("#Colleges").val()
                },
                success: function(data) {
                    $('#Departments').empty();
                    var obj = JSON.parse(data);
                    if ($("#Colleges").val() >= 0) {
                        document.getElementById("HiddenFilterBlock").hidden = false;
                        $.each(obj, function () {
                            $("#Departments").append($("<option></option >").val(this['Value']).html(this['Text']));
                        });
                    }
                    else {
                        document.getElementById("HiddenBlock").hidden = true;
                    }
                },
                error: function(data) {}
            });
        });
        </script>

        <script>
            $(document).ready(function () {


                $(".viewFilter").on("click", function (e) {
                    e.preventDefault();
                    document.getElementById("ShowFilter").hidden = true;
                    document.getElementById("HiddenFilterBlock").hidden = false;
                });
            });

        </script>
    }

