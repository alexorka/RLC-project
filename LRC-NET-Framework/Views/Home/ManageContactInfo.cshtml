@model LRC_NET_Framework.Models.MemberContactInfoModel

@{
    ViewBag.Title = "Manage Contact Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="font-weight-bold" style="background-color: #357ebd; border-bottom-left-radius:7px; border-bottom-right-radius:7px; color:gainsboro; padding-top:5px; padding-bottom:5px; padding-left:30px;"><h4>Manage Contact Info</h4></div>

<div class="form-horizontal" style="padding-top:5px;">
    @using (Html.BeginForm("ManageContactInfo", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @*@Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @Html.HiddenFor(model => model._MemberID)
        <div style="font-size:smaller; padding-bottom:5px; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
            <div class="col-md-11 h4">
                <div class="col-md-5" style="background-color:gainsboro;padding-top:5px;  padding-bottom:5px; padding-left:30px; border-bottom-left-radius:7px; border-bottom-right-radius:7px;">Add Phone</div>
            </div>
            <fieldset>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-11 col-md-offset-1" id="PhoneNumber">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("PhoneNumber", "Phone Number", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model._PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model._PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-4 col-md-offset-1" id="IsPhonePrimary" style="padding:0;">
                        <div class="col-md-3" style="padding-top:20px;">
                            <span class="text-danger">*&nbsp;</span>@Html.Label("IsPhonePrimary", "Is Primary") 
                        </div>
                        <div class="checkbox col-md-1">
                            @Html.EditorFor(model => model._IsPhonePrimary, new { htmlAttributes = new { @class = "form-control", style = "width: 25px;" } })
                            @Html.ValidationMessageFor(model => model._IsPhonePrimary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-11 col-md-offset-1" id="PhoneTypeID">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("PhoneTypeID", "Type", htmlAttributes: new { @class = "control-label" }) 
                        @Html.DropDownListFor(model => model._PhoneTypeID, Model._PhoneTypes, new { @class = "form-control", style = "width: 200px;" })
                        @Html.ValidationMessageFor(model => model._PhoneTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:7px;">
                    <div class="col-md-offset-1 col-md-11">
                        <input name="submit" type="submit" value="Submit New Phone" class="btn btn-primary" />
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-7 col-md-offset-1" id="Phones" style="background-color:lavender; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
                        <div style="background-color:gainsboro; padding-bottom:5px; padding-left:30px; border-bottom-left-radius:5px; border-bottom-right-radius:5px;">@Html.Label("Phones", "Phones", htmlAttributes: new { @class = "control-label", style = "font-size:larger;" })</div>
                        <table class="table">
                            <tr class="text-info">
                                <th>
                                    Phone Number
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Source
                                </th>
                                <th>
                                    Effective Start Date
                                </th>
                                <th>
                                    Effective End Date
                                </th>

                            </tr>
                            @foreach (var item in Model._MemberPhoneNumbers as List<tb_MemberPhoneNumbers>)
                            {
                                <tr>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>@Html.DisplayFor(modelItem => item.PhoneNumber)</b>
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_PhoneType.PhoneTypeName)
                                    </td>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>Primary</b>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Source)
                                    </td>
                                    <td>
                                        @if (item.CreatedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.CreatedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @if (item.ModifiedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.ModifiedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>

                                </tr>
                            }
                        </table>
                    </div>
                </div>

            </fieldset>
        </div>
    }
    <br />
    @using (Html.BeginForm("ManageContactInfo", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model._MemberID)
        @*@Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div style="font-size:smaller; padding-bottom:5px; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
            <div class="col-md-11 h4">
                <div class="col-md-5" style="background-color:gainsboro;padding-top:5px;  padding-bottom:5px; padding-left:30px; border-bottom-left-radius:7px; border-bottom-right-radius:7px;">Add Address</div>
            </div>
            <fieldset>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-11 col-md-offset-1" id="Address" style="padding-bottom:15px;">
                        @Html.Label("Address", "Address", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model._HomeStreet1, new { htmlAttributes = new { @class = "form-control", style = "width: 300px;" } })
                        <span class="text-danger">*&nbsp;</span><small>@Html.Label("Street Address", htmlAttributes: new { @class = "control-label" })</small>
                        @Html.ValidationMessageFor(model => model._HomeStreet1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-11 col-md-offset-1" style="padding-bottom:15px;">
                        @Html.EditorFor(model => model._HomeStreet2, new { htmlAttributes = new { @class = "form-control", style = "width: 300px;" } })
                        <small>@Html.Label("Street Address 2", htmlAttributes: new { @class = "control-label" })</small>
                        @Html.ValidationMessageFor(model => model._HomeStreet2, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 col-md-offset-1" style="padding:0px;">
                        <div class="col-md-7" style="padding-bottom:15px;">
                            @Html.EditorFor(model => model._City, new { htmlAttributes = new { @class = "form-control", style = "width: 300px;" } })
                            <span class="text-danger">*&nbsp;</span><small>@Html.Label("City", htmlAttributes: new { @class = "control-label" })</small>
                            @Html.ValidationMessageFor(model => model._City, "", new { @class = "text-danger" })
                            @*@Html.DropDownListFor(model => model._StateID, Model._States, new { @class = "form-control", style = "width: 200px;" })
        <small>@Html.Label("State", htmlAttributes: new { @class = "control-label" })</small>
        @Html.ValidationMessageFor(model => model._StateID, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model._StateCode, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            <span class="text-danger">*&nbsp;</span><small>@Html.Label("State", htmlAttributes: new { @class = "control-label" })</small>
                            @Html.ValidationMessageFor(model => model._StateCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model._ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="text-danger">*&nbsp;</span><small>@Html.Label("ZIP", htmlAttributes: new { @class = "control-label" })</small>
                            @Html.ValidationMessageFor(model => model._ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-11 col-md-offset-1" id="AddressTypeID">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("AddressTypeID", "Type", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model._AddressTypeID, Model._AddressTypes, new { @class = "form-control", style = "width: 200px;" })
                        @Html.ValidationMessageFor(model => model._AddressTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4 col-md-offset-1" id="IsAdressPrimary" style="padding:0;">
                    <div class="col-md-3" style="padding-top:20px; padding-left:0;">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("IsAdressPrimary", "Is Primary")
                    </div>
                    <div class="checkbox col-md-1">
                        @Html.EditorFor(model => model._IsAdressPrimary, new { htmlAttributes = new { @class = "form-control", style = "width: 25px;" } })
                        @Html.ValidationMessageFor(model => model._IsAdressPrimary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-11 col-md-offset-1" id="AddressSources" style="padding-bottom:15px; padding-left:0;">
                    <span class="text-danger">*&nbsp;</span>@Html.Label("AddressSources", "Source", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model._SourceID, Model._AddressSources, new { @class = "form-control", style = "width: 200px;" })
                    @Html.ValidationMessageFor(model => model._SourceID, "", new { @class = "text-danger" })
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-offset-1 col-md-11">
                        <input name="submit" type="submit" value="Submit New Address" class="btn btn-primary" />
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-7 col-md-offset-1" id="Addresses" style="background-color:lavender; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
                        <div style="background-color:gainsboro; padding-bottom:5px; padding-left:30px; border-bottom-left-radius:5px; border-bottom-right-radius:5px;">@Html.Label("Addresses", "Addresses", htmlAttributes: new { @class = "control-label", style = "font-size:larger;" })</div>
                        <table class="table">
                            <tr class="text-info">
                                <th>
                                    Address
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Source
                                </th>
                                <th>
                                    Effective Start Date
                                </th>
                                <th>
                                    Effective End Date
                                </th>

                            </tr>
                            @foreach (var item in Model._MemberAddresses as List<tb_MemberAddress>)
                            {
                                <tr>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>
                                                @Html.DisplayFor(modelItem => item.HomeStreet1),
                                                @Html.DisplayFor(modelItem => item.City),
                                                @Html.DisplayFor(modelItem => item.tb_States.StateCode),
                                                @Html.DisplayFor(modelItem => item.ZipCode)
                                            </b>
                                        }
                                        else
                                        {
                                            <span>
                                                @Html.DisplayFor(modelItem => item.HomeStreet1),
                                                @Html.DisplayFor(modelItem => item.City),
                                                @Html.DisplayFor(modelItem => item.tb_States.StateCode),
                                                @Html.DisplayFor(modelItem => item.ZipCode)
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_AddressType.AddressTypeName)
                                    </td>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>Primary</b>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_AddressSource.SourceName)
                                    </td>
                                    <td>
                                        @if (item.CreatedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.CreatedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @if (item.ModifiedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.ModifiedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>


            </fieldset>
        </div>
    }
    <br />
    @using (Html.BeginForm("ManageContactInfo", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model._MemberID)
        @*@Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div style="font-size:smaller; padding-bottom:5px; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
            <div class="col-md-11 h4">
                <div class="col-md-5" style="background-color:gainsboro;padding-top:5px;  padding-bottom:5px; padding-left:30px; border-bottom-left-radius:7px; border-bottom-right-radius:7px;">Add Email</div>
            </div>
            <fieldset>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-11 col-md-offset-1" id="EmailAddress">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("EmailAddress", "Email Address", htmlAttributes: new { @class = "control-label" }) 
                        @Html.EditorFor(model => model._EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model._EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px; padding-left:0;">
                    <div class="col-md-11 col-md-offset-1" id="EmailTypeID">
                        <span class="text-danger">*&nbsp;</span>@Html.Label("EmailTypeID", "Type", htmlAttributes: new { @class = "control-label" }) 
                        @Html.DropDownListFor(model => model._EmailTypeID, Model._EmailTypes, new { @class = "form-control", style = "width: 200px;" })
                        @Html.ValidationMessageFor(model => model._EmailTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-4 col-md-offset-1" id="IsEmailPrimary">
                        <div class="col-md-3" style="padding-top:20px; padding-left:0;">
                            <span class="text-danger">*&nbsp;</span>@Html.Label("IsEmailPrimary", "Is Primary") 
                        </div>
                        <div class="checkbox col-md-1">
                            @Html.EditorFor(model => model._IsEmailPrimary, new { htmlAttributes = new { @class = "form-control", style = "width: 25px;" } })
                            @Html.ValidationMessageFor(model => model._IsEmailPrimary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-offset-1 col-md-11">
                        <input name="submit" type="submit" value="Submit New Email" class="btn btn-primary" />
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-7 col-md-offset-1" id="Emails" style="background-color:lavender; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
                        <div style="background-color:gainsboro; padding-bottom:5px; padding-left:30px; border-bottom-left-radius:5px; border-bottom-right-radius:5px;">@Html.Label("Emails", "Emails", htmlAttributes: new { @class = "control-label", style = "font-size:larger;" })</div>
                        <table class="table">
                            <tr class="text-info">
                                <th>
                                    Email
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Source
                                </th>
                                <th>
                                    Effective Start Date
                                </th>
                                <th>
                                    Effective End Date
                                </th>

                            </tr>
                            @foreach (var item in Model._MemberEmails as List<tb_MemberEmail>)
                            {
                                <tr>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>@Html.DisplayFor(modelItem => item.EmailAddress)</b>
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(modelItem => item.EmailAddress)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_EmailType.EmailTypeName)
                                    </td>
                                    <td>
                                        @if (item.IsPrimary)
                                        {
                                            <b>Primary</b>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Source)
                                    </td>
                                    <td>
                                        @if (item.CreatedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.CreatedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>
                                    <td>
                                        @if (item.ModifiedDateTime != null)
                                        {
                                            @Convert.ToDateTime(item.ModifiedDateTime).ToString("MM/dd/yyyy")
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

            </fieldset>
        </div>
    }
</div>

<br />
<div class="col-md-11 col-md-offset-1">
    @if (ViewBag.CollegeID != null && (int)ViewBag.CollegeID > 0)
    {
        <a href="@Url.Action("MembersBySchool", "Home", new { CollegeID = ViewBag.CollegeID })" class="btn btn-info">&nbsp;&nbsp;Back<span class="glyphicon glyphicon-arrow-left pull-left" aria-hidden="true"></span></a>
    }
    else
    {
        <a href="@Url.Action("Details", "Home", new { id = Model._MemberID })" class="btn btn-info">&nbsp;&nbsp;Back<span class="glyphicon glyphicon-arrow-left pull-left" aria-hidden="true"></span></a>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
