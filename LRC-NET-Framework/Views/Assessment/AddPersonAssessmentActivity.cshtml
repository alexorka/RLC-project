@using LRC_NET_Framework.Models;
@model AssessActivityModels

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="font-weight-bold" style="background-color: #357ebd; border-bottom-left-radius:7px; border-bottom-right-radius:7px; color:gainsboro; padding-top:5px; padding-bottom:5px; padding-left:30px;"><h4>Add Assess or Action (@ViewBag.MemberName)</h4></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal" style="padding-top:20px;">

    @* --- ASSESSMENT --- *@
    @using LRC_NET_Framework.Helpers
    @Html.CreateList(ViewData["AssessmentErrorList"] as List<string>)

    <div style="font-size:smaller; padding: 0px 10px 5px 10px; margin-bottom:20px; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
        <div class="h4" style="background-color:gainsboro;padding: 5px 10px 5px 30px; border-bottom-left-radius:7px; border-bottom-right-radius:7px;">Add Assessment</div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model._Assessment.MemberID)
        @Html.HiddenFor(model => model._CollegeID)
        <fieldset>
            <div class="row" style="padding-bottom:3px; padding-top:10px;">
                <span style="padding-left:30px">
                    @Html.Label("Assessment", "Assessment")<span class="text-danger">&nbsp;&nbsp;*</span>
                </span>
                <div class="col-md-12" id="Assessment">
                    @Html.DropDownList("AssessmentNameID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model._Assessment.AssessmentNameID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom:3px; padding-top:3px;">
                <span style="padding-left:30px">
                    @Html.Label("AssessmentValue", "Assessment Value")<span class="text-danger">&nbsp;&nbsp;*</span>
                </span>
                <div class="col-md-12" id="AssessmentValue">
                    @Html.DropDownList("ValueID", null, htmlAttributes: new { @class = "form-control", style = "width: 120px;" })
                    @Html.ValidationMessageFor(model => model._Assessment.ValueID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom:3px; padding-top:3px;">
                <span style="padding-left:30px">
                    @Html.Label("AssessmentDate", "Assessment Date")<span class="text-danger">&nbsp;&nbsp;*</span>
                </span>
                <div class="col-md-12" id="AssessmentDate">
                    @Html.TextBoxFor(model => model._Assessment.AssessmentDate, "{0:yyyy-MM-dd}", new { @class = "form-control datecontrol", type = "date", style = "width: 150px;" })
                    @Html.ValidationMessageFor(model => model._Assessment.AssessmentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom:3px; padding-top:3px;">
                <span style="padding-left:30px">
                    @Html.Label("AssessedBy", "Assessed By")<span class="text-danger">&nbsp;&nbsp;*</span>
                </span>
                <div class="col-md-12" id="Assessment">
                    @Html.DropDownList("AssessedBy", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model._Assessment.AssessmentNameID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom:3px; padding-top:3px;">
                <span style="padding-left:30px">
                    @Html.Label("AssessmentNote", "Assessment Note")
                </span>
                <div class="col-md-12" id="AssessmentNote">
                    @Html.TextAreaFor(model => model._Assessment.AssessmentDesc, new { @class = "form-control", @cols = "100", @rows = "8", @style = "width:100%;" })
                    @Html.ValidationMessageFor(model => model._Assessment.AssessmentDesc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" style="padding-bottom:3px; padding-top:3px;">
                <div class="col-md-offset-1 col-md-11">
                    <input name="submit" type="submit" value="Submit" id="Assessment" class="btn btn-primary" />
                </div>
            </div>
            @if (Model._MemberAssessments.Count() > 0)
            {
            <div class="col-md-10" id="Assessment" style="background-color:lavender; border:solid; margin-top:10px; margin-bottom:10px; border-radius:5px; border-width:1px; border-color:gainsboro">

                <div style="background-color:gainsboro; padding-bottom:5px; padding-left:30px; border-bottom-left-radius:5px; border-bottom-right-radius:5px;">@Html.Label("Assessment", "Member Assessments", htmlAttributes: new { @class = "control-label", style = "font-size:larger;" })</div>

                <table class="table">
                    <tr class="text-info">
                        <th style="width:20%">
                            Assessment
                        </th>
                        <th>
                            Assessment Date
                        </th>
                        <th>
                            Assessment Value
                        </th>
                        <th>
                            Assessment Note
                        </th>
                        <th>
                            Assessed By
                        </th>
                        <th>
                        </th>
                    </tr>
                    @foreach (var myVal in Model._MemberAssessments)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_AssessmentName.AssessmentName)
                        </td>
                        <td>
                            @Convert.ToDateTime(myVal.AssessmentDate).ToString("MM/dd/yyyy")
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_AssessmentValue.ValueName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.AssessmentDesc)
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.AspNetUsers1.LastFirstName)
                        </td>
                        <td>
                            <a href="@Url.Action("DeleteAssessment", "Assessment", new { @AssessmentID = myVal.AssessmentID, MemberId = myVal.MemberID, CollegeID = ViewBag.CollegeID })" class="btn btn-xs"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                        </td>
                    </tr>
                    }
                </table>
            </div>
            }
        </fieldset>
    </div>

    @* --- ACTIVITY --- *@
    @using LRC_NET_Framework.Helpers
    @Html.CreateList(ViewData["ActivityErrorList"] as List<string>)

    <div style="font-size:smaller; padding: 0px 10px 20px 10px; border:solid; border-radius:5px; border-width:1px; border-color:gainsboro">
        <div class="h4" style="background-color:gainsboro;padding: 5px 10px 5px 30px; border-bottom-left-radius:7px; border-bottom-right-radius:7px;">Add Activity</div>
        <fieldset>
            <div class="row" style="padding-bottom:3px; padding-top:10px;">
                <span style="padding-left:30px">
                    @Html.Label("Activity", "Activity")<span class="text-danger">&nbsp;&nbsp;*</span>
                </span>
                <div class="col-md-12" id="Activity" style="overflow:hidden;">
                    <div style="width: 100%;">
                        <div style="float: left;">
                            @Html.DropDownList("ActivityID", null, htmlAttributes: new { @class = "form-control ddlControl" })
                            @Html.ValidationMessageFor(model => model._Activity.ActivityID, "", new { @class = "text-danger" })
                        </div>
                        <div style="float: left; margin-left:10px">
                            <a href="@Url.Action("CreateActivity", "Activities", new { callback = "AddPersonAssessmentActivity", memberId = Model._Assessment.MemberID, returnCollegeID = Model._CollegeID })" class="btn btn-primary"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a>
                        </div>
                    </div>
                </div>
            </div>

            <div id="HiddenBlock" hidden="hidden" style="padding-top:12px;">

                <div class="form-group">
                    <div class="col-md-12">
                        <div class="col-md-12" style="font-weight:bold">Activity Status</div>
                        <div class="col-md-3" id="ActivityStatusBefore" style="border-color:lightgrey; border-style:solid; border-width:1px; border-radius:5px; padding-bottom:10px;">
                            @Html.Label("ActivityStatusBefore", "Before The Fact", htmlAttributes: new { @class = "control-label" })<span class="text-danger">&nbsp;&nbsp;*</span>
                            @foreach (var myValue in ViewBag.ActivityStatus as List<tb_ActivityStatus>)
                        {
                            <div class="checkbox">
                                @Html.RadioButton("ActivityStatusID", myValue.ActivityStatusID, false, new { id = myValue.ActivityStatusName, disabled = "disabled" })
                                @Html.Label(myValue.ActivityStatusName, myValue.ActivityStatusName)
                            </div>
                    }
                        </div>

                        <div class="col-md-3" id="ActivityStatusAfter" style="border-color:lightgrey; border-style:solid; border-width:1px; border-radius:5px; padding-bottom:10px; margin-left:10px;">
                            @Html.Label("ActivityStatusAfter", "After The Fact", htmlAttributes: new { @class = "control-label" })
                            @foreach (var myValue in ViewBag.ActivityStatusAfter as List<SelectListItem>)
                        {
                            <div class="checkbox">
                                @Html.RadioButton("AfterTheFact", myValue.Value, new { id = myValue.Text, disabled = "disabled", @class = "radioSettings" })
                                @Html.Label(myValue.Text, new { disabled = "disabled" })
                            </div>
                    }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Label("ActivityDate", "Activity Date", htmlAttributes: new { @class = "control-label" })<span class="text-danger">&nbsp;&nbsp;*</span>
                        @Html.TextBoxFor(model => model._Activity.ActivityDate, "{0:yyyy-MM-dd}", new { @id = "tb_Activity_ActivityDate", @class = "form-control datecontrol", type = "date", style = "width: 150px;" })
                        @Html.ValidationMessageFor(model => model._Activity.ActivityDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Label("ActivityNote", "Activity Note", htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model._Activity.ActivityNote, new { @id = "tb_Activity_ActivityNote", @class = "form-control", @cols = "100", @rows = "5", @style = "width:100%;" })
                        @Html.ValidationMessageFor(model => model._Activity.ActivityNote, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-bottom:3px; padding-top:3px;">
                    <div class="col-md-offset-1 col-md-11">
                        <input name="submit" type="submit" value="Assign" id="Activity" class="btn btn-primary" />
                    </div>
                </div>

            </div>

            <div class="col-md-10" id="Activities" style="background-color:lavender; border:solid; margin-top:20px; border-radius:5px; border-width:1px; border-color:gainsboro">

                <div style="background-color:gainsboro; padding-bottom:5px; padding-left:30px; border-bottom-left-radius:5px; border-bottom-right-radius:5px;">@Html.Label("Activities", "Member Activity", htmlAttributes: new { @class = "control-label", style = "font-size:larger;" })</div>

                <table class="table">
                    <tr class="text-info">
                        <th style="width:20%">
                            Activity
                        </th>
                        <th>
                            Activity Date
                        </th>
                        <th>
                            Activity Status
                        </th>
                        <th>
                            Ex Post Status
                        </th>
                        <th>
                            Activity Note
                        </th>
                        <th>
                            Added By
                        </th>
                        <th>
                            Modified By
                        </th>
                        <th>
                            Modified Date
                        </th>
                        @*<th></th>*@
                    </tr>
                    @foreach (var myVal in Model._MemberActivity)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_Activity.ActivityName)
                        </td>
                        <td>
                            @Convert.ToDateTime(myVal.tb_Activity.ActivityDate).ToString("MM/dd/yyyy")
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_ActivityStatus.ActivityStatusName)
                        </td>
                        <td>
                            @if (myVal.Participated.HasValue)
                        {
                            if (myVal.Participated.GetValueOrDefault())
                            {<span>Participated</span>}
                        else
                        {<span>Not Participated</span>}
                }
                else
                {<span>Not Defined</span>}
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_Activity.ActivityNote)
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_Activity.AspNetUsers.LastFirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => myVal.tb_Activity.AspNetUsers1.LastFirstName)
                        </td>
                        <td>
                            @Convert.ToDateTime(myVal.tb_Activity.ModifiedDateTime).ToString("MM/dd/yyyy")
                        </td>
                        @*<td>
                            <a href="@Url.Action("DeleteActivity", "Assessment", new { @ActivityID = myVal.ActivityID, MemberId = myVal.MemberID, CollegeID = ViewBag.CollegeID })" class="btn btn-xs"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                        </td>*@
                    </tr>
            }
                </table>
            </div>
        </fieldset>
    </div><hr>
</div>
    <div class="col-md-11 col-md-offset-1">
        @if (ViewBag.CollegeID != null && (int)ViewBag.CollegeID > 0)
        {
            <a href="@Url.Action("MembersBySchool", "Home", new { CollegeID = ViewBag.CollegeID })" class="btn btn-info">&nbsp;&nbsp;Back&nbsp;to&nbsp;List<span class="glyphicon glyphicon-arrow-left pull-left" aria-hidden="true"></span></a>
        }
        @*else
            {
                <a href="@Url.Action("Details", "Home", new { id = Model._Assessment.MemberID })" class="btn btn-info">&nbsp;&nbsp;Back&nbsp;to&nbsp;List<span class="glyphicon glyphicon-arrow-left pull-left" aria-hidden="true"></span></a>
            }*@
    </div>
}
@section Scripts {
    <script src='@Url.Content("~/Scripts/jquery-1.12.4.min.js")' type="text/javascript"></script>
    <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    <script>
        var radioArray = new Array(2);
        $('.radioSettings').each(function () {
            if ($(this).prop('checked') == true) {
                radioArray[$(this).attr('id')] = 1;
            }
            else {
                radioArray[$(this).attr('id')] = 0;
            }
        });
        $('.radioSettings').click(function () {
            radioId = $(this).attr('id');
            if (radioArray[radioId] == 1) {
                $(this).prop('checked', false);
                radioArray[radioId] = 0; // changing the value of given key of array
            }
            else {
                $(this).prop('checked', true);
                radioArray[radioId] = 1; // changing the value of given key of array
            }
        });

        function setRadioButtons(obj) {
            rb_Committed = document.getElementById("Committed");
            rb_Committed.disabled = false;
            if (obj.ActivityStatusBeforeTheFact == "Committed")
                rb_Committed.checked = true;
            else
                rb_Committed.checked = false;

            rb_Tentative = document.getElementById("Tentative");
            rb_Tentative.disabled = false;
            if (obj.ActivityStatusBeforeTheFact == "Tentative")
                rb_Tentative.checked = true;
            else
                rb_Tentative.checked = false;

            rb_Participated = document.getElementById("Participated");
            rb_Participated.disabled = false;
            if (obj.ActivityStatusAfterTheFact == "Participated")
                rb_Participated.checked = true;
            else
                rb_Participated.checked = false;


            rb_NotParticipated = document.getElementById("Not Participated");
            rb_NotParticipated.disabled = false;
            if (obj.ActivityStatusAfterTheFact == "Not Participated")
                rb_NotParticipated.checked = true;
            else
                rb_NotParticipated.checked = false;
        }

        $(document).ready(function () {

            $.ajaxSetup({ cache: false });

            $(".viewDialog").on("click", function (e) {
                e.preventDefault();

                $("<div></div>")
                    .addClass("dialog")
                    .appendTo("body")
                    .dialog({
                        closeText: "",
                        title: $(this).attr("data-dialog-title"),
                        close: function () { $(this).remove() },
                        height: 300,
                        width: 500,
                        modal: true
                    })
                    .load(this.href);
            });


            $(".ddlControl").change(function() {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetActivityDetailsById", "Activities")',
                datatype: JSON,
                data: {
                    'activityID': $("#ActivityID").val(),
                    'memberID': @Html.Raw(Model._Assessment.MemberID)
                },
                success: function(data) {
                    $('#ActivityDetails').empty();
                    var obj = JSON.parse(data);
                    if ($("#ActivityID").val() != 0) {
                        document.getElementById("HiddenBlock").hidden = false; 
                        $('#tb_Activity_ActivityNote').val(obj.ActivityNote);
                        $('#tb_Activity_ActivityDate').val(obj.ActivityDate);
                        setRadioButtons(obj);
                    }
                    else {
                        document.getElementById("HiddenBlock").hidden = true;
                    }
                },
                error: function(data) {}
                        });
            });

        });
    </script>


    @Scripts.Render("~/bundles/jqueryval")
}
