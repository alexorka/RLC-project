@model PagedList.IPagedList<LRC_NET_Framework.tb_SemesterTaught>
@using PagedList.Mvc


@{
    ViewBag.Title = "School List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.CollegeName</h2>

<div class="row ex1">
    <div class="col-md-2 align-text-top"><small>Showing @Model.FirstItemOnPage - @Model.Count()&nbsp;&nbsp;of&nbsp;&nbsp;@ViewData["MemberQty"]</small></div>
    <div class="col-md-3 align-text-top"></div>
    <div class="col-md-7"></div>
</div>
<div class="ex1">
    <table class="table table-striped table-sm">
        <tr>
            <th>
                @Html.ActionLink("Faculty Member", "Index", new { sortOrder = ViewBag.NameSortParm })
            </th>
            <th>
                Category
            </th>
            <th>
                Department
            </th>
            <th>
                Campus
            </th>
            <th>
                Building
            </th>
            <th>
                Room
            </th>
            <th>
                Note
            </th>
            <th>
                Class
            </th>
            <th>
                Start
            </th>
            <th>
                End
            </th>
            <th>
                Days
            </th>
            <th>
                Membership
            </th>
            <th>
                Phone
            </th>
            <th>
                Membership Commitment
            </th>
            <th>
                Assess/Activity
            </th>
        </tr>

        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.ActionLink(item.tb_MemberMaster.LastName + ", " + item.tb_MemberMaster.FirstName, "Details", "Home", new { id = item.MemberID }, new { @class = "text -info" })
            </td>
            <td></td>
            <td>
                @Html.DisplayFor(modelItem => item.tb_MemberMaster.tb_Department.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tb_Building.tb_Campus.CampusName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tb_Building.BuildingName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Room)
            </td>
            <td>???</td>
            <td>
                @Html.DisplayFor(modelItem => item.Class)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassEnd)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.tb_WeekDay.WeekDayName)
            </td>
            <td align="center">
                @(item.tb_MemberMaster.tb_MemberActivity.FirstOrDefault().Membership ? "Yes" : "No")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tb_MemberMaster.tb_MemberPhoneNumbers.FirstOrDefault().PhoneNumber)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.tb_MemberMaster.tb_MemberActivity.FirstOrDefault().MembershipCommitment)
            <td align="center">
                <button type="button" class="btn btn-secondary">
                    <a href="@Url.Action("AddPersonAssessmentActivity", "Assessment", new { id = @item.MemberID })" class="glyphicon glyphicon-plus"></a>
                    @*<span class="glyphicon glyphicon-plus"></span>*@
                </button>
                @*<div class="btn-group" role="group" aria-label="...">
            @Html.ActionLink("Edit", "Edit", new { id = item.SemesterTaughtID }) |
            @Html.ActionLink("Details", "Details", new { id = item.SemesterTaughtID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.SemesterTaughtID })
        </div>*@
            </td>
        </tr>
        }
    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>


